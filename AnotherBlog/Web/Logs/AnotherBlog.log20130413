2013-04-13 21:18:56,690 [10] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:GenericADOException:could not delete collection: [AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO.Comments#1][SQL: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0]:InnerException:SqlException:Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated. 
2013-04-13 21:18:56,759 [10] ERROR NHibernate.AdoNet.AbstractBatcher - Could not execute command: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0 
System.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
2013-04-13 21:18:56,794 [10] ERROR NHibernate.Util.ADOExceptionReporter - Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated. 
2013-04-13 21:18:56,808 [10] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.Exceptions.GenericADOException: could not delete collection: [AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO.Comments#1][SQL: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0] ---> System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Remove(Object id, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Remove(Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRemoveAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 21:21:37,737 [67] ERROR NHibernate.AdoNet.AbstractBatcher - Could not execute command: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0 
System.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
2013-04-13 21:21:37,765 [67] ERROR NHibernate.Util.ADOExceptionReporter - Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated. 
2013-04-13 21:21:37,780 [67] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.Exceptions.GenericADOException: could not delete collection: [AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO.Comments#1][SQL: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0] ---> System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Remove(Object id, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Remove(Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRemoveAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 21:21:37,800 [67] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:GenericADOException:could not delete collection: [AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO.Comments#1][SQL: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0]:InnerException:SqlException:Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated. 
2013-04-13 21:21:37,858 [67] ERROR NHibernate.AdoNet.AbstractBatcher - Could not execute command: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0 
System.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
2013-04-13 21:21:37,888 [67] ERROR NHibernate.Util.ADOExceptionReporter - Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated. 
2013-04-13 21:21:37,902 [67] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.Exceptions.GenericADOException: could not delete collection: [AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO.Comments#1][SQL: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0] ---> System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Remove(Object id, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Remove(Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRemoveAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 21:27:52,967 [14] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:GenericADOException:could not delete collection: [AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO.Comments#1][SQL: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0]:InnerException:SqlException:Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated. 
2013-04-13 21:27:53,031 [14] ERROR NHibernate.AdoNet.AbstractBatcher - Could not execute command: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0 
System.Data.SqlClient.SqlException (0x80131904): Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
2013-04-13 21:27:53,061 [14] ERROR NHibernate.Util.ADOExceptionReporter - Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated. 
2013-04-13 21:27:53,075 [14] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.Exceptions.GenericADOException: could not delete collection: [AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogDTO.Comments#1][SQL: UPDATE EntryComments SET BlogId = null WHERE BlogId = @p0] ---> System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'BlogId', table 'AMForwardDb.dbo.EntryComments'; column does not allow nulls. UPDATE fails.
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(DbAsyncResult result, String methodName, Boolean sendToPipe)
   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteNonQuery(IDbCommand cmd)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Remove(Object id, ISessionImplementor session)
   --- End of inner exception stack trace ---
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Remove(Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRemoveAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 21:30:47,301 [71] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:TransientObjectException:object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO 
2013-04-13 21:30:47,348 [71] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO
   at NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   at NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   at NHibernate.Type.ManyToOneType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.WriteElement(IDbCommand st, Object elt, Int32 i, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.PerformInsert(Object ownerId, IPersistentCollection collection, IExpectation expectation, Object entry, Int32 index, Boolean useBatch, Boolean callable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Recreate(IPersistentCollection collection, Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRecreateAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 21:36:39,701 [14] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:TransientObjectException:object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO 
2013-04-13 21:36:39,748 [14] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO
   at NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   at NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   at NHibernate.Type.ManyToOneType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.WriteElement(IDbCommand st, Object elt, Int32 i, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.PerformInsert(Object ownerId, IPersistentCollection collection, IExpectation expectation, Object entry, Int32 index, Boolean useBatch, Boolean callable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Recreate(IPersistentCollection collection, Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRecreateAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 21:37:56,754 [11] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO
   at NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   at NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   at NHibernate.Type.ManyToOneType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.WriteElement(IDbCommand st, Object elt, Int32 i, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.PerformInsert(Object ownerId, IPersistentCollection collection, IExpectation expectation, Object entry, Int32 index, Boolean useBatch, Boolean callable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Recreate(IPersistentCollection collection, Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRecreateAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 21:37:56,754 [11] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:TransientObjectException:object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO 
2013-04-13 21:37:56,763 [11] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO
   at NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   at NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   at NHibernate.Type.ManyToOneType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.WriteElement(IDbCommand st, Object elt, Int32 i, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.PerformInsert(Object ownerId, IPersistentCollection collection, IExpectation expectation, Object entry, Int32 index, Boolean useBatch, Boolean callable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Recreate(IPersistentCollection collection, Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRecreateAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 21:41:27,449 [10] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:ActiveRecordException:Could not perform Save for BlogListDTO:InnerException:NonUniqueObjectException:a different object with the same identifier value was already associated with the session: 2, of entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListDTO 
2013-04-13 21:58:00,539 [66] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:ActiveRecordException:Could not perform Save for BlogListDTO:InnerException:NonUniqueObjectException:a different object with the same identifier value was already associated with the session: 2, of entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListDTO 
2013-04-13 21:58:45,505 [64] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:ActiveRecordException:Could not perform Save for BlogListDTO:InnerException:NonUniqueObjectException:a different object with the same identifier value was already associated with the session: 2, of entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListDTO 
2013-04-13 22:01:32,702 [65] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:TransientObjectException:object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO 
2013-04-13 22:01:32,720 [65] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO
   at NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   at NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   at NHibernate.Type.ManyToOneType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.WriteElement(IDbCommand st, Object elt, Int32 i, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.PerformInsert(Object ownerId, IPersistentCollection collection, IExpectation expectation, Object entry, Int32 index, Boolean useBatch, Boolean callable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Recreate(IPersistentCollection collection, Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRecreateAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 22:05:38,122 [7] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:TransientObjectException:object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO 
2013-04-13 22:05:38,170 [7] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO
   at NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   at NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   at NHibernate.Type.ManyToOneType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.WriteElement(IDbCommand st, Object elt, Int32 i, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.PerformInsert(Object ownerId, IPersistentCollection collection, IExpectation expectation, Object entry, Int32 index, Boolean useBatch, Boolean callable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Recreate(IPersistentCollection collection, Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRecreateAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 22:20:08,464 [38] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:TransientObjectException:object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO 
2013-04-13 22:20:08,482 [38] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO
   at NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   at NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   at NHibernate.Type.ManyToOneType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.WriteElement(IDbCommand st, Object elt, Int32 i, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.PerformInsert(Object ownerId, IPersistentCollection collection, IExpectation expectation, Object entry, Int32 index, Boolean useBatch, Boolean callable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.Recreate(IPersistentCollection collection, Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionRecreateAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 22:21:03,514 [38] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:ArgumentNullException:Value cannot be null.
Parameter name: source 
2013-04-13 22:23:28,826 [27] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:ArgumentNullException:Value cannot be null.
Parameter name: source 
2013-04-13 22:29:25,772 [6] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:InvalidOperationException:Sequence contains no matching element 
2013-04-13 22:30:07,855 [11] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:InvalidOperationException:Sequence contains no matching element 
2013-04-13 22:32:21,874 [34] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:TransientObjectException:object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO 
2013-04-13 22:32:21,890 [34] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO
   at NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   at NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   at NHibernate.Type.ManyToOneType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.WriteElement(IDbCommand st, Object elt, Int32 i, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.PerformInsert(Object ownerId, IPersistentCollection collection, IExpectation expectation, Object entry, Int32 index, Boolean useBatch, Boolean callable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.InsertRows(IPersistentCollection collection, Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionUpdateAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
2013-04-13 22:33:20,656 [27] ERROR AlwaysMoveForward.Common.Utilities.DefaultLogger - acorrea:TransientObjectException:object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO 
2013-04-13 22:33:20,704 [27] ERROR NHibernate.Event.Default.AbstractFlushingEventListener - Could not synchronize database state with session 
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing. Type: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO, Entity: AlwaysMoveForward.AnotherBlog.DataLayer.Entities.BlogListItemDTO
   at NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   at NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   at NHibernate.Type.ManyToOneType.NullSafeSet(IDbCommand st, Object value, Int32 index, Boolean[] settable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.WriteElement(IDbCommand st, Object elt, Int32 i, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.PerformInsert(Object ownerId, IPersistentCollection collection, IExpectation expectation, Object entry, Int32 index, Boolean useBatch, Boolean callable, ISessionImplementor session)
   at NHibernate.Persister.Collection.AbstractCollectionPersister.InsertRows(IPersistentCollection collection, Object id, ISessionImplementor session)
   at NHibernate.Action.CollectionUpdateAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Engine.ActionQueue.ExecuteActions(IList list)
   at NHibernate.Engine.ActionQueue.ExecuteActions()
   at NHibernate.Event.Default.AbstractFlushingEventListener.PerformExecutions(IEventSource session)
